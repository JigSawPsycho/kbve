secret:
    jwt:
        secretRef: 'supabase-secret-jwt'
        secretRefKey:
            anonKey: anonKey
            serviceKey: serviceKey
            secret: secret
    db:
        secretRef: 'supabase-secret-db'
        secretRefKey:
            username: username
            password: password
            database: database
    analytics:
        secretRef: 'supabase-secret-analytics'
        secretRefKey:
            apiKey: apiKey
    smtp:
        secretRef: 'supabase-secret-smtp'
        secretRefKey:
            username: username
            password: password
    dashboard:
        secretRef: 'supabase-secret-dashboard'
        secretRefKey:
            username: username
            password: password
    s3:
        secretRef: 'supabase-secret-s3'
        secretRefKey:
            keyId: keyId
            accessKey: accessKey

db:
    enabled: false
    secretName: 'supabase-secret-db'
    userName: postgres
    image:
        repository: kbve/kilobase
        pullPolicy: Always
        tag: '15.1.9'
    #replicaCount: 3
    serviceAccount:
        create: true
    service:
        type: ClusterIP
        port: 5432
    environment:
        POSTGRES_HOST: /var/run/postgresql
        PGPORT: '5432'
        POSTGRES_PORT: '5432'
        JWT_EXP: 3600
        # POSTGRES_HOST_AUTH_METHOD: md5
        # Enable SSL for postgres by specifying paths for mounted certificate key pair
        # POSTGRES_SSL_CERT: /path/to/ssl/server.crt
        # POSTGRES_SSL_KEY: /path/to/ssl/server.key
    persistence:
        enabled: false
    storage:
        storageClassName: 'longhorn'
        annotations:
            helm.sh/resource-policy: 'keep'
        size: 8Gi
        accessModes:
            - ReadWriteOnce
        class: ''
    autoscaling:
        enabled: false
        minReplicas: 1
        maxReplicas: 100
        targetCPUUtilizationPercentage: 80
        targetMemoryUtilizationPercentage: 80

# Studio Application
studio:
    enabled: true
    image:
        repository: supabase/studio
        pullPolicy: IfNotPresent
        tag: '20240729-ce42139'
    imagePullSecrets: []
    replicaCount: 1
    livenessProbe:
        httpGet:
            path: /api/profile
            port: 3000
        initialDelaySeconds: 3
    serviceAccount:
        create: true
    podSecurityContext:
        fsGroup: 2000
    securityContext:
        capabilities:
            drop:
                - ALL
        readOnlyRootFilesystem: false
        runAsNonRoot: true
        runAsUser: 1000
    service:
        type: ClusterIP
        port: 3000
    environment:
        STUDIO_DEFAULT_ORGANIZATION: KBVE
        STUDIO_DEFAULT_PROJECT: kbve
        STUDIO_PORT: '3000'
        SUPABASE_PUBLIC_URL: https://supabase.kbve.com/
        NEXT_PUBLIC_ENABLE_LOGS: 'true'
        NEXT_ANALYTICS_BACKEND_PROVIDER: postgres
    resources:
        requests:
            memory: '256Mi'
            cpu: '100m'
        limits:
            memory: '512Mi'
            cpu: '200m'
    autoscaling:
        enabled: true
        minReplicas: 1
        maxReplicas: 5
        targetCPUUtilizationPercentage: 80
        targetMemoryUtilizationPercentage: 80

# Auth Service
auth:
    enabled: true
    image:
        repository: supabase/gotrue
        pullPolicy: IfNotPresent
        tag: 'v2.158.1'
    replicaCount: 1
    serviceAccount:
        create: true
    podSecurityContext:
        fsGroup: 2000
    securityContext:
        capabilities:
            drop:
                - ALL
        readOnlyRootFilesystem: false
        runAsNonRoot: true
        runAsUser: 1000
    service:
        type: ClusterIP
        port: 9999
    environment:
        DB_HOST: supabase-release-supabase-db-rw.supabase.svc.cluster.local
        DB_USER: supabase_auth_admin
        DB_PORT: 5432
        DB_DRIVER: postgres
        DB_SSL: disable
        API_EXTERNAL_URL: https://supabase.kbve.com
        GOTRUE_API_HOST: '0.0.0.0'
        GOTRUE_API_PORT: '9999'
        GOTRUE_SITE_URL: https://supabase.kbve.com
        GOTRUE_URI_ALLOW_LIST: '*'
        GOTRUE_DISABLE_SIGNUP: 'false'
        GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
        GOTRUE_JWT_ADMIN_ROLES: service_role
        GOTRUE_JWT_AUD: authenticated
        GOTRUE_JWT_EXP: '3600'
        GOTRUE_EXTERNAL_EMAIL_ENABLED: 'true'
        GOTRUE_MAILER_AUTOCONFIRM: 'true'
        # GOTRUE_MAILER_SECURE_EMAIL_CHANGE_ENABLED: true
        # GOTRUE_SMTP_MAX_FREQUENCY: 1s
        GOTRUE_SMTP_ADMIN_EMAIL: 'support@kbve.com'
        GOTRUE_SMTP_HOST: 'smtp.resend.com'
        GOTRUE_SMTP_PORT: '465'
        GOTRUE_SMTP_SENDER_NAME: 'support@kbve.com'
        GOTRUE_EXTERNAL_PHONE_ENABLED: 'false'
        GOTRUE_SMS_AUTOCONFIRM: 'false'
        GOTRUE_MAILER_URLPATHS_INVITE: '/auth/v1/verify'
        GOTRUE_MAILER_URLPATHS_CONFIRMATION: '/auth/v1/verify'
        GOTRUE_MAILER_URLPATHS_RECOVERY: '/auth/v1/verify'
        GOTRUE_MAILER_URLPATHS_EMAIL_CHANGE: '/auth/v1/verify'
    

    resources:
        limits:
            cpu: 1000m
            memory: 1280Mi
        requests:
            cpu: 200m
            memory: 256Mi
    autoscaling:
        enabled: true
        minReplicas: 1
        maxReplicas: 10
        targetCPUUtilizationPercentage: 80
        targetMemoryUtilizationPercentage: 80

# Rest Service
rest:
    enabled: true
    image:
        repository: postgrest/postgrest
        pullPolicy: IfNotPresent
        tag: 'v12.2.0'
    serviceAccount:
        create: true
    podSecurityContext:
        fsGroup: 2000
    securityContext:
        capabilities:
            drop:
                - ALL
        readOnlyRootFilesystem: false
        runAsNonRoot: true
        runAsUser: 1000
    service:
        type: ClusterIP
        port: 3000
    environment:
        DB_HOST: supabase-release-supabase-db-rw.supabase.svc.cluster.local
        DB_USER: authenticator
        DB_PORT: 5432
        DB_DRIVER: postgres
        DB_SSL: disable # disable, allow, prefer, require, verify-ca, verify-full
        PGRST_DB_SCHEMAS: public,storage,graphql_public
        PGRST_DB_ANON_ROLE: anon
        PGRST_DB_USE_LEGACY_GUCS: false
        PGRST_APP_SETTINGS_JWT_EXP: 3600
    resources:
        limits:
            cpu: 1000m
            memory: 1280Mi
        requests:
            cpu: 200m
            memory: 256Mi
    autoscaling:
        enabled: true
        minReplicas: 1
        maxReplicas: 10
        targetCPUUtilizationPercentage: 80
        targetMemoryUtilizationPercentage: 80

# Realtime Service
realtime:
    enabled: true
    image:
        repository: supabase/realtime
        pullPolicy: IfNotPresent
        tag: 'v2.30.34'
    livenessProbe:
        httpGet:
            path: /
            port: 4000
        initialDelaySeconds: 3
    serviceAccount:
        create: true
    podSecurityContext:
        fsGroup: 2000
    securityContext:
        capabilities:
            drop:
                - ALL
        readOnlyRootFilesystem: false
        runAsNonRoot: true
        runAsUser: 1000
    service:
        type: ClusterIP
        port: 4000
    environment:
        DB_HOST: supabase-release-supabase-db-rw.supabase.svc.cluster.local
        DB_USER: supabase_admin
        DB_PORT: 5432
        DB_SSL: disable # disable, allow, prefer, require, verify-ca, verify-full
        DB_AFTER_CONNECT_QUERY: 'SET search_path TO _realtime'
        DB_ENC_KEY: supabaserealtime
        PORT: '4000'
        FLY_ALLOC_ID: fly123
        FLY_APP_NAME: realtime
        SECRET_KEY_BASE: UpNVntn3cDxHJpq99YMc1T1AQgQpc8kfYTuRgBiYa15BLrx8etQoXz3gZv1/u2oq
        ERL_AFLAGS: -proto_dist inet_tcp
        ENABLE_TAILSCALE: 'false'
        APP_NAME: "supabase_realtime"
        DNS_NODES: "''"
    resources:
        limits:
            cpu: 500m
            memory: 1G
        requests:
            cpu: 100m
            memory: 128Mi
    autoscaling:
        enabled: true
        minReplicas: 1
        maxReplicas: 5
        targetCPUUtilizationPercentage: 80
        targetMemoryUtilizationPercentage: 80

# Meta Service
meta:
    enabled: true
    image:
        repository: supabase/postgres-meta
        pullPolicy: IfNotPresent
        tag: 'v0.83.2'
    replicaCount: 1
    serviceAccount:
        create: true
    podSecurityContext:
        fsGroup: 2000
    securityContext:
        capabilities:
            drop:
                - ALL
        readOnlyRootFilesystem: false
        runAsNonRoot: true
        runAsUser: 1000
    service:
        type: ClusterIP
        port: 8080
    environment:
        DB_HOST: supabase-release-supabase-db-rw.supabase.svc.cluster.local
        DB_USER: supabase_admin
        DB_PORT: 5432
        DB_DRIVER: postgres
        DB_SSL: disable # disable, allow, prefer, require, verify-ca, verify-full
        PG_META_PORT: '8080'
    resources:
        limits:
            cpu: 1000m
            memory: 1280Mi
        requests:
            cpu: 200m
            memory: 256Mi
    autoscaling:
        enabled: true
        minReplicas: 1
        maxReplicas: 10
        targetCPUUtilizationPercentage: 80
        targetMemoryUtilizationPercentage: 80

# Storage Service
storage:
    # Enable storage provisioning
    enabled: true
    image:
        repository: supabase/storage-api
        pullPolicy: IfNotPresent
        tag: 'v1.10.1'
    replicaCount: 1
    livenessProbe:
        httpGet:
            path: /status
            port: 5000
        initialDelaySeconds: 3
    serviceAccount:
        create: true
    podSecurityContext:
        fsGroup: 2000
    securityContext:
        capabilities:
            drop:
                - ALL
        readOnlyRootFilesystem: false
        runAsNonRoot: true
        runAsUser: 1000
    service:
        type: ClusterIP
        port: 5000
    environment:
        DB_HOST: supabase-release-supabase-db-rw.supabase.svc.cluster.local
        DB_USER: supabase_storage_admin
        DB_PORT: 5432
        DB_DRIVER: postgres
        DB_SSL: disable # disable, allow, prefer, require, verify-ca, verify-full
        PGOPTIONS: -c search_path=storage,public
        FILE_SIZE_LIMIT: '52428800'
        STORAGE_BACKEND: file # file, s3
        FILE_STORAGE_BACKEND_PATH: /var/lib/storage
        TENANT_ID: stub
        REGION: stub
        GLOBAL_S3_BUCKET: stub
        # Set variables below and secret.s3 above to enable S3 storage bucket
        # If using this chart's minio, skip the endpoint and protocol below
        # GLOBAL_S3_ENDPOINT: http://minio:9000
        # GLOBAL_S3_PROTOCOL: http
        # GLOBAL_S3_FORCE_PATH_STYLE: true
        # AWS_DEFAULT_REGION: stub
    resources:
        limits:
            cpu: 1000m
            memory: 1280Mi
        requests:
            cpu: 200m
            memory: 128Mi
    persistence:
        enabled: true
        storageClassName: ''
        annotations: {}
        size: 10Gi
        accessModes:
            - ReadWriteOnce
        class: ''
    autoscaling:
        enabled: true
        minReplicas: 1
        maxReplicas: 10
        targetCPUUtilizationPercentage: 80
        targetMemoryUtilizationPercentage: 80

# imgproxy
imgproxy:
    enabled: true
    image:
        repository: darthsim/imgproxy
        pullPolicy: IfNotPresent
        tag: 'v3.8.0'
    imagePullSecrets: []
    replicaCount: 1
    nameOverride: ''
    fullnameOverride: ''
    livenessProbe:
        exec:
            command:
                - imgproxy
                - health
        initialDelaySeconds: 3
    serviceAccount:
        create: true
    podSecurityContext:
        fsGroup: 2000
    securityContext:
        capabilities:
            drop:
                - ALL
        readOnlyRootFilesystem: false
        runAsNonRoot: true
        runAsUser: 1000
    service:
        type: ClusterIP
        port: 5001
    environment:
        IMGPROXY_BIND: ':5001'
        IMGPROXY_LOCAL_FILESYSTEM_ROOT: /
        IMGPROXY_USE_ETAG: 'true'
        IMGPROXY_ENABLE_WEBP_DETECTION: 'true'
    resources:
        limits:
            cpu: 1000m
            memory: 1280Mi
        requests:
            cpu: 200m
            memory: 256Mi
    persistence:
        enabled: false
    autoscaling:
        enabled: false
        minReplicas: 1
        maxReplicas: 10
        targetCPUUtilizationPercentage: 80
        targetMemoryUtilizationPercentage: 80

# Kong
kong:
    enabled: true
    image:
        repository: kong
        pullPolicy: IfNotPresent
        tag: 2.8.1
    replicaCount: 1
    livenessProbe: {}
    readinessProbe: {}
    serviceAccount:
        create: true
    podAnnotations: {}
    podSecurityContext:
        fsGroup: 2000
    securityContext:
        capabilities:
            add:
                - NET_BIND_SERVICE
            drop:
                - ALL
        readOnlyRootFilesystem: false
        runAsNonRoot: false
        #runAsUser: 1000
    service:
        type: ClusterIP
        port: 8000
    environment:
        KONG_DATABASE: 'off'
        KONG_DECLARATIVE_CONFIG: /usr/local/kong/kong.yml
        KONG_DNS_ORDER: LAST,A,CNAME
        KONG_PLUGINS: request-transformer,cors,key-auth,acl,basic-auth
        KONG_NGINX_PROXY_PROXY_BUFFER_SIZE: 160k
        KONG_NGINX_PROXY_PROXY_BUFFERS: 64 160k
        KONG_LOG_LEVEL: warn
    ingress:
        enabled: true
        className: 'nginx'
        annotations:
            nginx.ingress.kubernetes.io/rewrite-target: /
            # cert-manager.io/cluster-issuer: "letsencrypt-staging"
            # kubernetes.io/tls-acme: "true"
        tls:
            []
            # Define TLS secret for SSL termination.
            # This section can be left blank if using cluster certificate manager.
            # Otherwise, setting this in tandem with certificate manager will overwrite the secret name.
            # - secretName: example-com-tls
            #   hosts:
            #     - example.com
        hosts:
            - host: supabase.kbve.com
              paths:
                  - path: /
                    pathType: Prefix
    resources:
        requests:
            cpu: 500m
            memory: 256Mi
        limits:
            cpu: 1000m
            memory: 1280Mi
    autoscaling:
        enabled: false
        minReplicas: 1
        maxReplicas: 100
        targetCPUUtilizationPercentage: 80
        targetMemoryUtilizationPercentage: 80

# Analytics
analytics:
    # Enable analytics provisioning
    enabled: false
    image:
        repository: supabase/logflare
        pullPolicy: IfNotPresent
        tag: '1.4.0'
    replicaCount: 1
    livenessProbe:
        httpGet:
            path: /health
            port: 4000
        initialDelaySeconds: 3
    serviceAccount:
        create: true
    podSecurityContext:
        fsGroup: 2000
    securityContext:
        capabilities:
            drop:
                - ALL
        readOnlyRootFilesystem: false
        runAsNonRoot: true
        runAsUser: 1000
    service:
        type: ClusterIP
        port: 4000
    environment:
        LOGFLARE_NODE_HOST: 127.0.0.1
        DB_HOST: supabase-release-supabase-db-rw.supabase.svc.cluster.local
        DB_USERNAME: supabase_admin
        DB_PORT: 5432
        DB_DRIVER: postgresql
        DB_SCHEMA: _analytics
        LOGFLARE_SINGLE_TENANT: 'true'
        LOGFLARE_SUPABASE_MODE: 'true'
        FEATURE_FLAG_OVERRIDE: multibackend=true
    bigQuery:
        enabled: false
        projectId: google-project-id
        projectNumber: google-project-number
        gcloudJson: ''
    resources:
        limits:
            cpu: 1000m
            memory: 1280Mi
        requests:
            cpu: 200m
            memory: 256Mi
    autoscaling:
        enabled: false
        minReplicas: 1
        maxReplicas: 10
        targetCPUUtilizationPercentage: 80
        targetMemoryUtilizationPercentage: 80

# Vector
vector:
    enabled: false
    image:
        repository: timberio/vector
        pullPolicy: IfNotPresent
        tag: '0.28.1-alpine'
    replicaCount: 1
    livenessProbe:
        httpGet:
            path: /health
            port: 9001
        initialDelaySeconds: 3
    serviceAccount:
        create: true
    podSecurityContext:
        fsGroup: 2000
    securityContext:
        capabilities:
            drop:
                - ALL
        readOnlyRootFilesystem: false
        runAsNonRoot: true
        runAsUser: 1000
    service:
        type: ClusterIP
        port: 9001
    ## Vector requires logs from the control plane to function.
    ## This is normally stored in /var/log/pods
    ## Modify these values according to your environment.
    # volumeMounts:
    #   - name: pod-logs
    #     mountPath: /var/log/pods
    # volumes:
    #   - name: pod-logs
    #     hostPath:
    #       path: /var/log/pods

    resources:
        limits:
            cpu: 1000m
            memory: 1280Mi
        requests:
            cpu: 200m
            memory: 256Mi
    autoscaling:
        enabled: false
        minReplicas: 1
        maxReplicas: 100
        targetCPUUtilizationPercentage: 80
        targetMemoryUtilizationPercentage: 80

# Functions
functions:
    enabled: true
    image:
        repository: supabase/edge-runtime
        pullPolicy: IfNotPresent
        tag: 'v1.58.2'
    replicaCount: 1
    serviceAccount:
        create: true
    podSecurityContext:
        fsGroup: 2000
    securityContext:
        capabilities:
            drop:
                - ALL
        readOnlyRootFilesystem: false
        runAsNonRoot: true
        runAsUser: 1000
    service:
        type: ClusterIP
        port: 9000
    environment:
        DB_HOST: supabase-release-supabase-db-rw.supabase.svc.cluster.local
        DB_USERNAME: supabase_functions_admin
        DB_PORT: 5432
        DB_DRIVER: postgresql
        DB_SSL: disable # disable, allow, prefer, require, verify-ca, verify-full
    resources:
        limits:
            cpu: 1000m
            memory: 1280Mi
        requests:
            cpu: 300m
            memory: 500Mi
    autoscaling:
        enabled: false
        minReplicas: 1
        maxReplicas: 10
        targetCPUUtilizationPercentage: 80
        targetMemoryUtilizationPercentage: 80

## Minio + Disabled Parts

# minio
minio:
    enabled: false
    image:
        repository: minio/minio
        pullPolicy: IfNotPresent
        tag: 'latest'
    imagePullSecrets: []
    replicaCount: 1
    serviceAccount:
        create: true
        fsGroup: 2000
    securityContext:
        capabilities:
            drop:
                - ALL
        readOnlyRootFilesystem: false
        runAsNonRoot: true
        runAsUser: 1000
    service:
        type: ClusterIP
        port: 9000
    resources:
        limits:
            cpu: 100m
            memory: 128Mi
        requests:
            cpu: 100m
            memory: 128Mi
    persistence:
        enabled: false
        storageClassName: ''
        size: 10Gi
        accessModes:
            - ReadWriteOnce
        class: ''
    autoscaling:
        enabled: false
        minReplicas: 1
        maxReplicas: 100
        targetCPUUtilizationPercentage: 80
        targetMemoryUtilizationPercentage: 80
