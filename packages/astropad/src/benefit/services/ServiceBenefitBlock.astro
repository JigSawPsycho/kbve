---
import { getCollection } from 'astro:content';
import { z } from 'zod';

interface Props {
  collectionID: string;
  collectionTag: string;
  featured?: boolean;
  background?: boolean;
}

const statSchema = z.object({
  title: z.string().optional(),
  data: z.string().optional(),
  html: z.string().optional(),
});

const {
  collectionID,
  collectionTag,
  featured = true,
  background = false,
} = Astro.props;

const servicesCollection = await getCollection(collectionID);

const servicesEntries = servicesCollection.filter(
  (entry: { data: { tags: string | string[] } }) =>
    Array.isArray(entry.data.tags) &&
    entry.data.tags.includes(collectionTag) &&
    (featured ? entry.data.tags.includes('featured') : true)
);

const filteredItems = servicesEntries.map(
  (entry: {
    slug: any;
    data: {
      [x: string]: any;
      unsplash: any;
      title: any;
      description: any;
      tags: any;
      img: any;
      lottie: any;
      stats: any;
      button: any;
    };
  }) => ({
    id: entry.slug,
    slug: entry.slug,
    unsplash: entry.data.unsplash,
    name: entry.data.title,
    description: entry.data.description,
    tags: entry.data.tags,
    img: entry.data.img,
    lottie: entry.data.lottie,
    stats: entry.data['stats']
      ? entry.data['stats'].map((stat: any) => statSchema.parse(stat))
      : [],
    button: entry.data.button,
  })
);

const hasItems = filteredItems.length > 0;
const displayItems = hasItems
  ? filteredItems.map(
      (item: {
        id?: string;
        name?: string;
        slug?: string;
        description?: string;
        unsplash?: string;
        img?: string;
        lottie?: string;
        stats?: { title: string; data: string; html?: string }[];
        button?: string;
      }) => ({
        id: item.id || item.slug || 'missing-id',
        slug: item.slug,
        name: item.name || item.slug || 'Missing id, name, or slug',
        description: item.description || 'No description available',
        unsplash: item.unsplash || '',
        lottie:
          item.lottie ||
          `
        <dotlottie-player
				autoplay
				loop
				class="w-24 md:w-48 lg:w-96 aspect-video"
				mode="normal"
				src="https://kbve.com/assets/lottie/beer.lottie">
			</dotlottie-player>`,
        img: item.img || '',
        stats: item.stats || [],
        button:
          item.button ||
          `
       <button class="relative rounded px-5 py-2.5 overflow-hidden group bg-cyan-500 relative hover:bg-gradient-to-r hover:from-cyan-500 hover:to-cyan-400 text-white hover:ring-2 hover:ring-offset-2 hover:ring-cyan-400 transition-all ease-out duration-300">
<span class="absolute right-0 w-8 h-32 -mt-12 transition-all duration-1000 transform translate-x-12 bg-white opacity-10 rotate-12 group-hover:-translate-x-96 ease"></span>
<span class="relative">Default Button</span>
</button>
        `,
      })
    )
  : [];
---

<section class="g:p-8 text-gray-100">
  <div class="container mx-auto space-y-12">
    {
      hasItems ? (
        displayItems.map(
          (
            item: {
              id: string | null | undefined;
              name: string;
              description: string;
              unsplash: string;
              img: string;
              lottie: string;
              stats: { title: string; data: string; html?: string }[];
              button: string;
            },
            index: number
          ) => (
            <div
              class="benefit-container-outer"
              style={
                item.unsplash
                  ? `background-image: url(https://images.unsplash.com/photo-${item.unsplash}?fit=crop&w=1400&h=500&q=75)`
                  : ''
              }
            >
              <div class="benefit-container">
                <div class="benefit-text">
                  <h1 class="benefit-title">{item.name}</h1>
                  <p class="benefit-description">{item.description}</p>
                  <div class="benefit-stats">
                    {item.stats.map((item) => (
                      <div class="benefit-stat">
                        <h3 class="benefit-stat-data">{item.data}</h3>
                        <p class="benefit-stat-title">{item.title}</p>
                      </div>
                    ))}
                  </div>
                  <div class="benefit-button" set:html={item.button} />
                </div>
                <div class="benefit-lottie" set:html={item.lottie} />
              </div>
            </div>
          )
        )
      ) : (
        <div>No items found with the tag "{collectionTag}"</div>
      )
    }
  </div>
</section>

<style>
  .benefit-container-outer {
    border-radius: 10px;
  }

  .benefit-container {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;

    width: 100%;

    border-radius: 10px;

    padding: 3rem;

    background-color: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(4px);
  }

  .benefit-text {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    gap: 2.25rem;

    width: 45%;

    color: white;
  }

  .benefit-title {
    margin: 0;

    font-size: 3rem;
    font-weight: 700;
    line-height: 100%;
  }

  .benefit-description {
    margin: 0;

    font-size: 1rem;
    font-weight: 400;
    line-height: 160%;
  }

  .benefit-stats {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;

    width: 100%;
  }

  .benefit-stat {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    gap: 0.5rem;
  }

  .benefit-stat-data {
    margin: 0;

    font-size: 2.5rem;
    font-weight: 700;
    line-height: 100%;
    color: white;
  }

  .benefit-stat-title {
    margin: 0;

    font-size: 0.85rem;
    font-weight: 400;
    line-height: 100%;
    color: rgba(255, 255, 255, 0.5);
  }

  .benefit-button {
    margin-top: 0.5rem;
  }

  .benefit-lottie {
    width: 30%;

    background-position: center;
    background-size: cover;
  }

  @media only screen and (max-width: 1024px) {
    .benefit-container {
      flex-direction: column;
      gap: 2rem;
    }

    .benefit-text {
      width: 100%;
    }

    .benefit-stat-data {
      font-size: 1.5rem;
    }

    .benefit-stat-title {
      font-size: 0.75rem;
    }

    .benefit-lottie {
      display: none;
    }
  }
</style>
