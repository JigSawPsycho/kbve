---
import Layout from '../../layouts/Layout.astro';
// import { AstroVe as VE } from '@kbve/astro-ve';

//  META Tags

let title = "KBVE Journal: Chronicle Your Daily Odyssey";
let description = 
    'KBVE Journal: Your Personal Space to Reflect and Grow. Capture the essence of each day in a beautifully designed digital journal, tailor-made to inspire your journey towards self-discovery and personal growth'

//  Journal Configuration

import { getCollection } from 'astro:content';

const journals = await getCollection('journal');

//  This type still needs to include the 
type JournalEntryWithSlug = [string, {
    id: string;
    title: string;
    description: string;
    tags: string[];
    date: string; // or Date
}];


// Represents the detailed data of a journal entry
type JournalData = {
    title: string;
    description: string;
    tags: string[];
    date: string; // Assuming ISO format (YYYY-MM-DD)
};

// Represents the full structure of a journal entry, including its slug
type JournalEntry = {
    slug: string;
    data: JournalData;
};


function mapJournalEntriesToTuples(journals: JournalEntry[]): JournalEntriesTuple[] {
    return journals.map((entry): JournalEntriesTuple => [
        entry.slug, 
        {
            title: entry.data.title,
            description: entry.data.description,
            tags: entry.data.tags,
            date: entry.data.date,
        },
    ]);
}

// Represents the tuple used for mapping entries, combining slug with simplified data
type JournalEntriesTuple = [string, JournalData];

    const journalsEntries: JournalEntriesTuple[] = journals.map((entry): JournalEntriesTuple => [
    entry.slug, 
    {
        id: entry.slug,
        title: entry.data.title,
        description: entry.data.description,
        tags: entry.data.tags,
        date: entry.data.date,
    },
]);

const sortableJournals = structuredClone(journalsEntries);

const sortedJournals = sortableJournals.sort(([slugA, entryA], [slugB, entryB]) => {
    const dateA = new Date(entryA.date);
    const dateB = new Date(entryB.date);
    return dateA.getTime() - dateB.getTime();
});


const groupedByMonth: { [key: string]: JournalEntryWithSlug[] } = {};


sortedJournals.forEach(([slug, entry]) => {
    const date = new Date(entry.date);
    const monthKey = `${date.getFullYear()}-${date.getMonth() + 1}`; // Format: YYYY-M

    if (!groupedByMonth[monthKey]) {
        groupedByMonth[monthKey] = [];
    }

    groupedByMonth[monthKey].push([slug, entry]);
});

function getLatestJournalEntries(entries: JournalEntry[], count: number = 10): JournalEntry[] {
    // Sort the entries by date in descending order
    const sortedEntries = entries.sort((a, b) => {
        const dateA = new Date(a.date).getTime();
        const dateB = new Date(b.date).getTime();
        return dateB - dateA; // For descending order
    });

    // Return the first 'count' entries
    return sortedEntries.slice(0, count);
}

function getJournalEntriesInLast10Days(entries: JournalEntry[], daysAgo: number = 10): JournalEntry[] {
    const today = new Date();
    const endDate = new Date();
    endDate.setDate(today.getDate() - daysAgo); // Set 'endDate' to 'daysAgo' days before today

    // Filter entries within the last 10 days
    const filteredEntries = entries.filter(entry => {
        const entryDate = new Date(entry.date);
        return entryDate >= endDate && entryDate <= today;
    });

    // Sort the filtered entries by date in descending order (newest first)
    const sortedFilteredEntries = filteredEntries.sort((a, b) => {
        return new Date(b.date).getTime() - new Date(a.date).getTime();
    });

    return sortedFilteredEntries; // This no longer slices to 10, assuming you want all entries in the last 10 days
}

const latestEntries = getJournalEntriesInLast10Days(journalsEntries);
console.log(latestEntries);



---
<Layout title={title} description={description}>
    <section class="flex flex-col md:flex-row md:flex-wrap gap-2 mx-auto w-full justify-around">

    
      <div class="flex grow bg-zinc-950 border border-cyan-200 rounded-2xl p-4">  
        <div class="flex items-center grow">
          <div class="inline-flex flex-shrink-0 justify-center items-center w-12 h-12 text-white bg-gradient-to-br from-pink-500 to-voilet-500 rounded-lg mr-3">
              <svg class="w-8 h-8" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M4 4a2 2 0 00-2 2v4a2 2 0 002 2V6h10a2 2 0 00-2-2H4zm2 6a2 2 0 012-2h8a2 2 0 012 2v4a2 2 0 01-2 2H8a2 2 0 01-2-2v-4zm6 4a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd"></path></svg>
          </div>
          <div class="flex-shrink-0 ml-3">
            <span class="text-2xl font-bold leading-none text-gray-200 sm:text-3xl">$3,600</span>
            <h3 class="text-base font-normal text-gray-200">Today's Money</h3>
          </div>
          <div class="flex flex-1 justify-end items-center ml-5 w-0 text-base font-bold text-teal-500">
            +16%
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
              <path fill-rule="evenodd" d="M5.293 7.707a1 1 0 010-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 01-1.414 1.414L11 5.414V17a1 1 0 11-2 0V5.414L6.707 7.707a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
            </svg>
          </div>
        </div>
    </div>

    
    <div class="flex grow  bg-zinc-950 border border-cyan-200 rounded-2xl p-4">  
        <div class="flex items-center grow">
          <div class="inline-flex flex-shrink-0 justify-center items-center w-12 h-12 text-white bg-gradient-to-br from-pink-500 to-voilet-500 rounded-lg mr-3">
              <svg class="w-8 h-8" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M4 4a2 2 0 00-2 2v4a2 2 0 002 2V6h10a2 2 0 00-2-2H4zm2 6a2 2 0 012-2h8a2 2 0 012 2v4a2 2 0 01-2 2H8a2 2 0 01-2-2v-4zm6 4a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd"></path></svg>
          </div>
          <div class="flex-shrink-0 ml-3">
            <span class="text-2xl font-bold leading-none text-gray-200 sm:text-3xl">$3,600</span>
            <h3 class="text-base font-normal text-gray-200">Today's Money</h3>
          </div>
          <div class="flex flex-1 justify-end items-center ml-5 w-0 text-base font-bold text-teal-500">
            +16%
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
              <path fill-rule="evenodd" d="M5.293 7.707a1 1 0 010-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 01-1.414 1.414L11 5.414V17a1 1 0 11-2 0V5.414L6.707 7.707a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
            </svg>
          </div>
        </div>
    </div>
    
    <div class="flex grow bg-zinc-950 border border-cyan-200 rounded-2xl p-4">  
        <div class="flex items-center grow">
          <div class="inline-flex flex-shrink-0 justify-center items-center w-12 h-12 text-white bg-gradient-to-br from-pink-500 to-voilet-500 rounded-lg mr-3">
              <svg class="w-8 h-8" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M4 4a2 2 0 00-2 2v4a2 2 0 002 2V6h10a2 2 0 00-2-2H4zm2 6a2 2 0 012-2h8a2 2 0 012 2v4a2 2 0 01-2 2H8a2 2 0 01-2-2v-4zm6 4a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd"></path></svg>
          </div>
          <div class="flex-shrink-0 ml-3">
            <span class="text-2xl font-bold leading-none text-gray-200 sm:text-3xl">$3,600</span>
            <h3 class="text-base font-normal text-gray-200">Today's Money</h3>
          </div>
          <div class="flex flex-1 justify-end items-center ml-5 w-0 text-base font-bold text-teal-500">
            +16%
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
              <path fill-rule="evenodd" d="M5.293 7.707a1 1 0 010-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 01-1.414 1.414L11 5.414V17a1 1 0 11-2 0V5.414L6.707 7.707a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
            </svg>
          </div>
        </div>
    </div>

    <div class="flex grow bg-zinc-950 border border-cyan-200 rounded-2xl p-4">  
      <div class="flex items-center grow">
        <div class="inline-flex flex-shrink-0 justify-center items-center w-12 h-12 text-white bg-gradient-to-br from-pink-500 to-voilet-500 rounded-lg mr-3">
            <svg class="w-8 h-8" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M4 4a2 2 0 00-2 2v4a2 2 0 002 2V6h10a2 2 0 00-2-2H4zm2 6a2 2 0 012-2h8a2 2 0 012 2v4a2 2 0 01-2 2H8a2 2 0 01-2-2v-4zm6 4a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd"></path></svg>
        </div>
        <div class="flex-shrink-0 ml-3">
          <span class="text-2xl font-bold leading-none text-gray-200 sm:text-3xl">$3,600</span>
          <h3 class="text-base font-normal text-gray-200">Today's Money</h3>
        </div>
        <div class="flex flex-1 justify-end items-center ml-5 w-0 text-base font-bold text-teal-500">
          +16%
          <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
            <path fill-rule="evenodd" d="M5.293 7.707a1 1 0 010-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 01-1.414 1.414L11 5.414V17a1 1 0 11-2 0V5.414L6.707 7.707a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
          </svg>
        </div>
      </div>
  </div>




    </section>

    <!-- Journals -->


    <section class="flex flex-col md:flex-row md:flex-wrap gap-2 mx-auto w-full justify-between">
      {journalsEntries.map(([slug, { id, title, description, tags, date }]) => (
        <div class="flex grow bg-zinc-950 border border-cyan-200 rounded-2xl p-4">
          <a href={`https://kbve.com/journal/${id}`}>  
            <div class="flex items-center">
              
              
              <div class="bg-zinc-800 shadow-md rounded-lg p-2">
                <h2 class="text-lg font-semibold text-cyan-400">{title}</h2>
                <p class="text-gray-600">{description}</p>
                <div class="flex flex-wrap gap-2 mt-2 justify-end">
                  {tags.map((tag: string) => (
                    <span  class="bg-blue-100 text-blue-800 text-xs font-semibold mr-2 px-2.5 py-0.5 rounded">
                      {tag}
                    </span>
                  ))}
                </div>
                <div class="text-right text-sm text-gray-500 mt-4">
                  {new Date(date).toLocaleDateString()}
                </div>

              </div>
            
            </div>
          </a>
    </div>
    ))}
    </section>

    <!-- Sorted Journals -->

    <div>
      {Object.entries(groupedByMonth).map(([monthKey, entries]) => (
        <div id={monthKey}>
          <h2>{monthKey}</h2> 
          {entries.map(([slug, { id, title, description, tags, date }]) => (
            <div id={id}>
             
            </div>
          ))}
        </div>
      ))}
    </div>
</Layout>