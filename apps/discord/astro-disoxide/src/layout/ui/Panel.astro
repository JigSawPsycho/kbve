---
import { Icon } from '@astrojs/starlight/components';
---
<div
	x-data="astro"
	x-bind="refreshOnPageLoad"
	class="z-40 relative"
>
	<template x-if="pageLoaded">
		<div
			x-cloak
			x-show="$store.panelManager.open"
			x-transition:enter="transition ease-out duration-300"
			x-transition:enter-start="translate-x-full"
			x-transition:enter-end="translate-x-0"
			x-transition:leave="transition ease-in duration-200"
			x-transition:leave-start="translate-x-0"
			x-transition:leave-end="translate-x-full"
			class="fixed top-0 right-0 z-[9999] w-full sm:max-w-lg h-full bg-gray-900 text-white shadow-xl transform"
			style="will-change: transform"
		>
        
        <div id="lottie-container" class="w-full h-[450px] scale-[1.03] sepia-50 z-20"></div>

			<!-- Panel Header -->
			<div class="p-4 flex justify-between items-center border-b border-gray-700">
				<h2 class="text-lg font-semibold capitalize" x-text="$store.panelManager.payload?.name || 'Details'"></h2>
				<button
					@click="$store.panelManager.closePanel()"
					class="text-purple-400 hover:text-white text-xl font-bold"
					aria-label="Close Panel"
				>
					<Icon name="close" />
				</button>
			</div>
            
			<!-- Panel Content -->
			<div class="p-4 overflow-y-auto space-y-4 text-sm">
				<!-- IndexedDB HTML Injection -->
				<div x-show="$store.panelManager.content" x-html="$store.panelManager.content"></div>
               

				<!-- Fallback to payload -->
				<template x-if="!$store.panelManager.content">
					<div>
						<h3 class="text-purple-300 font-medium mb-2">Panel Payload</h3>
						<pre class="text-xs bg-gray-800 p-2 rounded" x-text="JSON.stringify($store.panelManager.payload, null, 2)"></pre>
					</div>
				</template>
                
			</div>
		</div>
        
	</template>
   
</div>

<script type="module">
	import {
		DotLottieWorker
	} from "https://esm.sh/@lottiefiles/dotlottie-web";

	document.addEventListener('alpine:init', () => {
		let lottieInstance = null;
		const src = "http://localhost:4321/assets/json/lottie/animu.lottie";
		const createLottie = () => {
			const container = document.getElementById("lottie-container");
			if (!container || lottieInstance) return;

			const canvas = document.createElement("canvas");
			canvas.className = "w-full h-full";
			container.appendChild(canvas);

			lottieInstance = new DotLottieWorker({
				canvas,
				src,
				loop: true,
				autoplay: true,
                mode: "normal",
			});
		};

		const destroyLottie = () => {
			if (lottieInstance) {
				lottieInstance.destroy();
				lottieInstance = null;
			}
			const container = document.getElementById("lottie-container");
			if (container) container.innerHTML = "";
		};

		Alpine.effect(() => {
			const isOpen = Alpine.store("panelManager").open;
			if (isOpen) {
				setTimeout(createLottie, 150); // slight delay for panel render
			} else {
				destroyLottie();
			}
		});
	});
</script>
