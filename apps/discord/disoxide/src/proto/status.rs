// This file is @generated by prost-build.
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct StatusMessage {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(string, tag = "2")]
    pub sender: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub content: ::prost::alloc::string::String,
    /// Unix timestamp for compatibility
    #[prost(int64, tag = "4")]
    pub timestamp: i64,
    /// Bitflags (TEXT=1, IMAGE=2, VIDEO=4, AUDIO=8, LINK=16)
    #[prost(uint32, tag = "5")]
    pub r#type: u32,
    /// Users who liked the status
    #[prost(string, repeated, tag = "6")]
    pub likes: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    /// Comments
    #[prost(message, repeated, tag = "7")]
    pub comments: ::prost::alloc::vec::Vec<Comment>,
    /// Reaction system
    #[prost(message, repeated, tag = "8")]
    pub reactions: ::prost::alloc::vec::Vec<Reaction>,
    /// Geolocation (optional)
    #[prost(string, tag = "9")]
    pub location: ::prost::alloc::string::String,
    /// "Web", "iOS", etc.
    #[prost(string, tag = "10")]
    pub device_source: ::prost::alloc::string::String,
    /// Edited status flag
    #[prost(bool, tag = "11")]
    pub is_edited: bool,
    /// For replies/threads
    #[prost(uint32, tag = "12")]
    pub parent_id: u32,
    /// Restatus flag
    #[prost(bool, tag = "13")]
    pub is_restatus: bool,
    /// Original status ID for restatus
    #[prost(uint32, tag = "14")]
    pub original_id: u32,
    /// Quoted content
    #[prost(string, tag = "15")]
    pub quote_text: ::prost::alloc::string::String,
    /// Media metadata
    #[prost(message, repeated, tag = "16")]
    pub attachments: ::prost::alloc::vec::Vec<MediaAttachment>,
    /// PUBLIC=1, FOLLOWERS=2, PRIVATE=4
    #[prost(uint32, tag = "17")]
    pub visibility: u32,
    /// "@username" mentions
    #[prost(string, repeated, tag = "18")]
    pub tagged_users: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    /// "#topic" tags
    #[prost(string, repeated, tag = "19")]
    pub hashtags: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    /// Number of views
    #[prost(uint32, tag = "20")]
    pub view_count: u32,
}
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Comment {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(string, tag = "2")]
    pub author: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub content: ::prost::alloc::string::String,
    /// Unix timestamp for compatibility
    #[prost(int64, tag = "4")]
    pub timestamp: i64,
}
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Reaction {
    /// LIKE=1, HEART=2, LAUGH=4, SAD=8, ANGRY=16
    #[prost(uint32, tag = "1")]
    pub flags: u32,
    /// List of users who reacted
    #[prost(string, repeated, tag = "2")]
    pub user_ids: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
}
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MediaAttachment {
    /// URL to the media
    #[prost(string, tag = "1")]
    pub url: ::prost::alloc::string::String,
    /// IMAGE=1, VIDEO=2, GIF=4, etc.
    #[prost(uint32, tag = "2")]
    pub media_type: u32,
    /// Optional caption
    #[prost(string, tag = "3")]
    pub caption: ::prost::alloc::string::String,
}
