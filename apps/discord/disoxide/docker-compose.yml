services:

    disoxide:
        image: kbve/disoxide:1.2
        restart: unless-stopped
        ports:
            - '3000:3000'
            - '50051:50051'
        healthcheck:
            test: ["CMD", "curl", "--fail", "http://localhost:3000/health/"]
            interval: 5s
            timeout: 5s
            retries: 10
        environment:
            REDIS_HOST: redis
            REDIS_PORT: 6379
            REDIS_PASSWORD: redispassword
            RUST_LOG: debug

    kilobase-init:
        image: busybox:latest
        container_name: kilobase-init
        volumes:
            - pgsodium_key:/etc/postgresql-custom
        command: >
            /bin/sh -c "
            echo '$PGSODIUM_ROOT_KEY' > /etc/postgresql-custom/pgsodium_root.key &&
            chmod 644 /etc/postgresql-custom/pgsodium_root.key &&
            chown 105:106 /etc/postgresql-custom/pgsodium_root.key
            "
        restart: 'no'
        environment:
            - PGSODIUM_ROOT_KEY=${PGSODIUM_ROOT_KEY}

    kilobase:
        container_name: kilobase-postgres
        image: kbve/kilobase:15.1.10
        restart: unless-stopped
        ports:
            - '5432:5432'
        volumes:
            # Persist PostgreSQL data
            - ./volumes/kilobase/data:/var/lib/postgresql/data
            # Optional: Add init scripts if needed
            # - ./volumes/kilobase/init.sql:/docker-entrypoint-initdb.d/init.sql
            - pgsodium_key:/etc/postgresql-custom
        healthcheck:
            test: ['CMD', 'pg_isready', '-U', 'postgres', '-h', 'localhost']
            interval: 5s
            timeout: 5s
            retries: 10
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_PORT: 5432
            POSTGRES_HOST: /tmp/postgresql
            PGPASSWORD: postgres
            REDIS_HOST: redis
            REDIS_PORT: 6379
            REDIS_PASSWORD: redispassword
        # command:
        #     [
        #         'postgres',
        #         '-c',
        #         'config_file=/etc/postgresql/postgresql.conf',
        #         '-c',
        #         'log_min_messages=error',
        #     ]
        command:
            [
                "sh",
                "-c",
                "mkdir -p /tmp/postgresql && exec postgres -c config_file=/etc/postgresql/postgresql.conf -c log_min_messages=error -c unix_socket_directories=/tmp/postgresql"
            ]
        depends_on:
            kilobase-init:
                condition: service_completed_successfully
            redis:
                condition: service_healthy

    redis:
        image: redis:7-alpine
        container_name: kilobase-redis
        restart: unless-stopped
        ports:
            - '6379:6379'
        healthcheck:
            test: ['CMD', 'redis-cli', 'ping']
            interval: 5s
            timeout: 5s
            retries: 5
        environment:
            REDIS_PASSWORD: redispassword
        command: ["redis-server", "--requirepass", "redispassword"]

volumes:
    pgsodium_key:
