name: Process Music Issues

on:
  issues:
    types: [opened]

jobs:
  process_issue:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Check if issue title contains [MUSIC]
      id: check_title
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const issue_title = context.payload.issue.title;
          const is_music_issue = issue_title.includes('[MUSIC]');
          return { is_music_issue };

    - name: Stop if not a music issue
      if: ${{ steps.check_title.outputs.is_music_issue == 'false' }}
      run: echo "Not a music issue. Skipping further steps."

    - name: Get issue contents
      if: ${{ steps.check_title.outputs.is_music_issue == 'true' }}
      id: get_issue
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const issue_number = context.payload.issue.number;
          const owner = context.repo.owner;
          const repo = context.repo.repo;
          const issue = await github.rest.issues.get({
            owner,
            repo,
            issue_number
          });
          return issue.data.body;

    - name: Check for YouTube link
      if: ${{ steps.check_title.outputs.is_music_issue == 'true' }}
      id: check_youtube
      uses: actions/github-script@v7
      with:
        script: |
          const issue_body = `{{ steps.get_issue.outputs.result }}`;
          const youtube_regex = /https?:\/\/(www\.)?youtube\.com\/watch\?v=([\w-]+)/gi;
          const match = youtube_regex.exec(issue_body);
          const has_youtube_link = !!match;
          const youtube_id = has_youtube_link ? match[2] : '';
          return { has_youtube_link, youtube_id };

    - name: Display issue contents
      if: ${{ steps.check_title.outputs.is_music_issue == 'true' }}
      run: |
        echo "Issue body: ${{ steps.get_issue.outputs.result }}"

    - name: Display YouTube link check result
      if: ${{ steps.check_title.outputs.is_music_issue == 'true' }}
      run: |
        echo "Contains YouTube link: ${{ steps.check_youtube.outputs.has_youtube_link }}"

    - name: Extract and display YouTube ID if link is found
      if: ${{ steps.check_youtube.outputs.has_youtube_link == 'true' && steps.check_title.outputs.is_music_issue == 'true' }}
      run: |
        echo "YouTube ID: ${{ steps.check_youtube.outputs.youtube_id }}"
