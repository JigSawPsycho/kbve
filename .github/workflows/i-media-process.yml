name: Process Music Issues

on:
  issues:
    types: [opened]

permissions:
  issues: write
  contents: read

jobs:
  process_issue:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Check if issue title contains [MUSIC]
      id: check_title
      env:
        ISSUE_TITLE: ${{ github.event.issue.title }}
      run: |
        echo "Issue Title: $ISSUE_TITLE"
        if echo "$ISSUE_TITLE" | grep -q "\[MUSIC\]"; then
          echo "is_music_issue=true" >> $GITHUB_ENV
        else
          echo "is_music_issue=false" >> $GITHUB_ENV
        fi

    - name: Stop if not a music issue
      if: env.is_music_issue == 'false'
      run: echo "Not a music issue. Skipping further steps."

    - name: Check for YouTube link in issue body
      if: env.is_music_issue == 'true'
      id: check_youtube
      env:
        ISSUE_BODY: ${{ github.event.issue.body }}
      run: |
        echo "Issue Body: $ISSUE_BODY"
        if echo "$ISSUE_BODY" | grep -q "https://www.youtube.com/watch?v="; then
          YOUTUBE_ID=$(echo "$ISSUE_BODY" | grep -oP 'https://www.youtube.com/watch\?v=\K[\w-]+')
          echo "has_youtube_link=true" >> $GITHUB_ENV
          echo "youtube_id=$YOUTUBE_ID" >> $GITHUB_ENV
        else
          echo "has_youtube_link=false" >> $GITHUB_ENV
        fi

    - name: Display YouTube link check result
      if: env.is_music_issue == 'true'
      run: |
        echo "Contains YouTube link: ${{ env.has_youtube_link }}"

    - name: Extract and display YouTube ID if link is found
      if: env.has_youtube_link == 'true' && env.is_music_issue == 'true'
      run: |
          echo "YouTube ID: ${{ env.youtube_id }}"
          curl -s -X POST https://rust.kbve.com/api/v1/call_groq \
              -H "Content-Type: application/json" \
              -d '{
                    "message": "Please read the provided text, extract the required information, sanitize the title, and fill it into the specified command format. The title should only contain numbers, letters, and the characters `()`, `.`, and `-`.\n\n**Input:**\n```\n\n **Fill out the Form**\n\nYouTube Link: https://www.youtube.com/watch?v=ODXq4FtS-ys\nTitle: Hippie Sabotage - The Best of Chill Music (Mix)\nGenre: lofihiphop\n\n## Human\n\nFor supported genres, please visit [Music](https://kbve.com/music/)\nPick only one of the different genres!\ndnb, chillstep, lofihiphop, nujazz, electroswing, edm, rock\n\n\n```\n\n**Output:**\n\n```bash\n./kbve.sh -nx kbve.com:music --args=\"--file=lofihiphop --title='\''Hippie Sabotage - The Best of Chill Music (Mix)'\'' --ytid=ODXq4FtS-ys\"```\n\nHere is the template for the command:\n```\n./kbve.sh -nx kbve.com:music --args=\"--file=[insert file/genre here] --title='\''[insert sanitized title here]'\'' --ytid=[insert YouTube ID here]\"```\n\nEnsure to:\n1. Extract the `File/Genre`, `Title`, and `YouTube ID` from the text.\n2. Sanitize the `Title` to only include numbers, letters, and the characters `()`, `.`, and `-`.\n3. Only acceptable genres/file are `dnb`, `chillstep`, `lofihiphop`, `nujazz`, `electroswing`, `edm`, `rock`\n4. Fill in the command template with the extracted and sanitized values.\n\n**Example Input:**\n```text\nFile/Genre: jazz\nTitle: Louis Armstrong - What a Wonderful World (Jazz Remix)\nYouTube ID: abc12345```\n\n**Example Output:**\n```bash\n./kbve.sh -nx kbve.com:music --args=\"--file=jazz --title='\''Louis Armstrong - What a Wonderful World (Jazz Remix)'\'' --ytid=abc12345\"```\n\n**Your Task:**\nPlease parse the provided text below and generate the command.\n\n**Input:**\n```text\n${{ github.event.issue.body }}\n\n YTID Might be ${{ env.youtube_id }}```\n\n**Output:**\n```\n```\n",
                    "model": "llama3-8b-8192"
                  }' -o curl_output.txt
  
    - name: Capture and display curl output
      if: env.has_youtube_link == 'true' && env.is_music_issue == 'true'
      run: |
          CURL_OUTPUT=$(cat curl_output.txt)
          echo "Curl Output: $CURL_OUTPUT"
          echo "curl_output=$CURL_OUTPUT" >> $GITHUB_ENV
  
    - name: Use curl output in subsequent steps
      if: env.has_youtube_link == 'true' && env.is_music_issue == 'true'
      run: |
          echo "Using captured curl output: ${{ env.curl_output }}"

    - name: Post comment to issue
      if: env.has_youtube_link == 'true' && env.is_music_issue == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" \
             -H "Content-Type: application/json" \
             -d '{"body": "Here is the processed information:\n\n```bash\n'"${{ env.curl_output }}"'```"}' \
             "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments"